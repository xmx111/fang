<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ufo.fang.center.dao.dictionary.mapper.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.ufo.fang.center.model.Dictionary" >
    <id column="t_id" property="id" jdbcType="BIGINT" />
    <result column="t_code" property="code" jdbcType="VARCHAR" />
    <result column="t_value" property="value" jdbcType="VARCHAR" />
    <result column="t_status" property="status" jdbcType="TINYINT" />
    <result column="t_description" property="description" jdbcType="VARCHAR" />
    <result column="t_gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="t_gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_dictionary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ufo.fang.center.model.Dictionary" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_dictionary (id, code, value, 
      status, description, gmt_create, 
      gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ufo.fang.center.model.Dictionary" >
    update t_dictionary
    set code = #{code,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select t.id as t_id, t.code as t_code, t.value as t_value, t.status as t_status, 
    t.description as t_description, t.gmt_create as t_gmt_create, t.gmt_modified as t_gmt_modified
    from t_dictionary t
    where t.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select t.id as t_id, t.code as t_code, t.value as t_value, t.status as t_status, 
    t.description as t_description, t.gmt_create as t_gmt_create, t.gmt_modified as t_gmt_modified
    from t_dictionary t
  </select>
  <select id="selectByParameters" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select t.id as t_id, t.code as t_code, t.value as t_value, t.status as t_status, 
    t.description as t_description, t.gmt_create as t_gmt_create, t.gmt_modified as t_gmt_modified
    from t_dictionary t
  </select>
  <select id="selectByPageList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select t.id as t_id, t.code as t_code, t.value as t_value, t.status as t_status, 
    t.description as t_description, t.gmt_create as t_gmt_create, t.gmt_modified as t_gmt_modified
    from t_dictionary t
  </select>
  <select id="selectByPageListSum" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
    select count(1) as totalNum 
    from t_dictionary t
  </select>
  <insert id="batchInsert" parameterType="java.util.List" >
    insert into t_dictionary (id, 
      code, value, status, 
      description, gmt_create, gmt_modified
      )
    values <foreach collection="list" item="item" open="(" close=")" separator=",">#{item.id,jdbcType=BIGINT}, 
      #{item.code,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, 
      #{item.description,jdbcType=VARCHAR}, #{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}
      </foreach>
  </insert>
  <delete id="batchDelete" parameterType="java.util.List" >
    delete from t_dictionary
    where id in 
    <foreach collection="list" item="id" open="(" close=")" separator=",">
      ${id}
    </foreach>
  </delete>
</mapper>